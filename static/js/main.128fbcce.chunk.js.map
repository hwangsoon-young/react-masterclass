{"version":3,"sources":["api.ts","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","Response","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","Price","useQuery","refetchInterval","isLoading","data","type","series","name","map","price","close","options","plotOptions","candlestick","colors","upward","downward","chart","height","width","toolbar","show","background","title","text","align","xaxis","yaxis","tooltip","enabled","Chart","isDark","theme","mode","grid","stroke","curve","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","y","formatter","value","toFixed","Overview","styled","div","OverviewItem","Description","p","Container","Header","header","Title","h1","props","accentColor","Loader","span","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infodata","fetchCoinTickers","tickersLoading","tickersdata","loading","Helmet","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","CoinsList","ul","li","cardBgColor","Img","img","Coins","toggleDark","onClick","slice","coin","pathname","id","src","toLowerCase","Router","darkTheme","bgColor","lightTheme","GlobalStyle","createGlobalStyle","App","useState","isDack","setInDark","current","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.128fbcce.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\n\r\nexport function fetchCoins(){\r\n    return fetch(`${BASE_URL}/coins`).then((Response) => Response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId:string){\r\n    return fetch(`${BASE_URL}/coins/${coinId}`).then((Response) => Response.json());\r\n}\r\n\r\nexport function fetchCoinTickers(coinId:string){\r\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then((Response) => Response.json());\r\n} \r\n\r\nexport function fetchCoinHistory(coinId:string){\r\n    const endDate = Math.floor(Date.now() / 1000);\r\n    const startDate = endDate - 60*60*24*7*2;\r\n    return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`).then((Response) => Response.json());\r\n} ","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ReactApexChart from \"react-apexcharts\"\r\n\r\ninterface IHistorical {\r\n    time_open: string;\r\n    time_close: string;\r\n    open: number;\r\n    high: number;\r\n    low: number;\r\n    close: number;\r\n    volume: number;\r\n    market_cap: number;\r\n  }\r\n\r\ninterface Idata {\r\n    a: string;\r\n    b: number;\r\n}\r\n\r\ninterface ChartProps {\r\n    coinId: string;\r\n}\r\n\r\nfunction Price({ coinId }:ChartProps){\r\n    const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n        fetchCoinHistory(coinId),\r\n        {\r\n            refetchInterval: 10000,\r\n        }\r\n    );\r\n    // console.log(data?.map((price) => [\r\n    //                  new Date(price.time_open).getTime(),\r\n    //                  price.open,\r\n    //                  price.high,\r\n    //                  price.low,\r\n    //                  price.close,\r\n    //              ]));\r\n    // console.log(\r\n    //     data?.map((price => price.close))\r\n    // );\r\n    return <div>{isLoading ? \"Loading chart...\" : \r\n        <ReactApexChart \r\n        type=\"candlestick\"\r\n        series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price => price.close)) ?? [],\r\n            },\r\n          ]}\r\n        // series={[\r\n        //   {\r\n        //     data: data?.map((price:{\r\n        //         time_open:any;\r\n        //         open:any;\r\n        //         high:any;\r\n        //         low:any;\r\n        //         close:any;\r\n        //             }) => [\r\n        //             new Date(price.time_open).getTime(),\r\n        //             price.open,\r\n        //             price.high,\r\n        //             price.low,\r\n        //             price.close,\r\n        //         ])??{[][]},\r\n        //   }\r\n        // ]}\r\n\r\n            options={{\r\n                plotOptions: {\r\n                    candlestick: {\r\n                    colors: {\r\n                    upward: \"#DF7D46\", // 상승 시 색상\r\n                    downward: \"#3C90EB\", // 하락 시 색상\r\n                    },\r\n                    },\r\n                    },\r\n                chart: {\r\n                    height: 500,\r\n                    width: 500,\r\n                    toolbar: {\r\n                        show: false,\r\n                    },\r\n                    background:\"transparent\",\r\n                },\r\n                title: {\r\n                    text: 'CandleStick Chart',\r\n                    align: 'left'\r\n                },\r\n                xaxis: {\r\n                    type: 'datetime'\r\n                },\r\n                yaxis: {\r\n                    tooltip: {\r\n                      enabled: true\r\n                    }\r\n                }\r\n            }}/>}\r\n            </div>\r\n}\r\n\r\nexport default Price;","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\"\r\n\r\ninterface IHistorical {\r\n    time_open: string;\r\n    time_close: string;\r\n    open: number;\r\n    high: number;\r\n    low: number;\r\n    close: number;\r\n    volume: number;\r\n    market_cap: number;\r\n  }\r\n\r\ninterface ChartProps {\r\n    coinId: string;\r\n    isDark: boolean;\r\n}\r\n\r\n\r\nfunction Chart({ coinId ,isDark}:ChartProps){\r\n    const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\r\n        fetchCoinHistory(coinId),\r\n        {\r\n            refetchInterval: 10000,\r\n        }\r\n    );\r\n    return <div>{isLoading ? \"Loading chart...\" : \r\n        <ApexChart \r\n            type=\"line\" \r\n            series={[\r\n                {\r\n                  name: \"Price\",\r\n                  data: data?.map((price => price.close)) ?? [],\r\n                },\r\n              ]}\r\n            options={{\r\n                theme: {\r\n                    mode: isDark ? \"dark\" : \"light\",\r\n                },\r\n                chart: {\r\n                    height: 500,\r\n                    width: 500,\r\n                    toolbar: {\r\n                        show: false,\r\n                    },\r\n                    background:\"transparent\",\r\n                },\r\n                grid:{show:false},\r\n                stroke: {\r\n                    curve: \"smooth\",\r\n                    width: 4,\r\n\r\n                },\r\n                yaxis:{show:false},\r\n                xaxis:{\r\n                    axisBorder:{show:false},\r\n                    axisTicks:{show:false},\r\n                    labels:{show:false},\r\n                    type: \"datetime\",\r\n                    categories: data?.map((price => price.time_close))??[],\r\n                },\r\n                fill: { \r\n                    type: \"gradient\", \r\n                    gradient:{gradientToColors:[\"#2ecc71\"], stops:[0,100]},\r\n                },\r\n                colors: [\"#2980b9\"],\r\n                tooltip: {\r\n                    y: {\r\n                        formatter: (value) => `$ ${value.toFixed(2)}`\r\n                    }\r\n                }\r\n            }}/>}</div>\r\n}\r\n\r\nexport default Chart;","import {Helmet} from \"react-helmet\";\r\nimport { Switch, Route, useLocation, useParams, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Price from \"./Price\";\r\nimport Chart from \"./Chart\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinInfo,fetchCoinTickers } from \"../api\";\r\n\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n    max-width: 480px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height: 10vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 48px;\r\n    color:${props => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n    text-align: center;\r\n    display: block;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Tab = styled.span< {isActive: boolean}>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${props => props.isActive ? props.theme.accentColor : props.theme.textColor}\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n    coinId:string;\r\n}\r\n\r\ninterface RouteState{\r\n    name:string;\r\n}\r\n\r\n\r\n\r\n\r\ninterface InfoData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    is_new: boolean;\r\n    is_active: boolean;\r\n    type: string;\r\n    description: string;\r\n    message: string;\r\n    open_source: boolean;\r\n    started_at: string;\r\n    development_status: string;\r\n    hardware_wallet: boolean;\r\n    proof_type: string;\r\n    org_structure: string;\r\n    hash_algorithm: string;\r\n    first_data_at: string;\r\n    last_data_at: string;\r\n}\r\n\r\ninterface PriceData {\r\n    id: string;\r\n    name: string;\r\n    symbol: string;\r\n    rank: number;\r\n    circulating_supply: number;\r\n    total_supply: number;\r\n    max_supply: number;\r\n    beta_value: number;\r\n    first_data_at: string;\r\n    last_updated: string;\r\n    quotes: {\r\n        USD: {\r\n            ath_date: string;\r\n            ath_price: number;\r\n            market_cap: number;\r\n            market_cap_change_24h: number;\r\n            percent_change_1h: number;\r\n            percent_change_1y: number;\r\n            percent_change_6h: number;\r\n            percent_change_7d: number;\r\n            percent_change_12h: number;\r\n            percent_change_15m: number;\r\n            percent_change_24h: number;\r\n            percent_change_30d: number;\r\n            percent_change_30m: number;\r\n            percent_from_price_ath: number;\r\n            price: number;\r\n            volume_24h: number;\r\n            volume_24h_change_24h: number;\r\n        }\r\n    };\r\n}\r\n\r\ninterface ICoinProps {\r\n  isDark:boolean;\r\n}\r\n\r\nfunction Coin({isDark}: ICoinProps){\r\n    const { coinId } = useParams<RouteParams>();\r\n    const {state} = useLocation<RouteState>();\r\n    const priceMatch = useRouteMatch(\"/:coinID/price\");\r\n    const chartMatch = useRouteMatch(\"/:coinID/chart\");\r\n    const { isLoading: infoLoading, data: infodata } = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId) )\r\n    const { isLoading: tickersLoading, data: tickersdata } = useQuery<PriceData>(\r\n      [\"tickers\", coinId] , \r\n      () => fetchCoinTickers(coinId),\r\n      {\r\n        refetchInterval: 5000,\r\n      }\r\n    );\r\n    const loading = infoLoading || tickersLoading;\r\n    return <Container>\r\n      <Helmet>\r\n        <title>{state?.name ? state.name : loading ? \"Loading...\" : infodata?.name}</title>\r\n      </Helmet>\r\n        <Header>\r\n            <Title>\r\n                {state?.name ? state.name : loading ? \"Loading...\" : infodata?.name}\r\n            </Title>\r\n        </Header>\r\n        {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infodata?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>${infodata?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickersdata?.quotes?.USD?.price?.toFixed(3) }</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infodata?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{tickersdata?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersdata?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/react-masterclass/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null} >\r\n              <Link to={`/react-masterclass/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n        \r\n\r\n          <Switch>\r\n              <Route path={`/react-masterclass/:coinId/price`}>\r\n                  <Price coinId={coinId}/>\r\n              </Route>\r\n              <Route path={`/react-masterclass/:coinId/chart`}>\r\n                  <Chart isDark={isDark} coinId={coinId}/>\r\n              </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n}\r\n\r\nexport default Coin;","import {Helmet} from \"react-helmet\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 20px;\r\n    max-width: 480px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height: 10vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul`\r\n\r\n`;\r\n\r\nconst Coin = styled.li`\r\n    background-color: ${(props) => props.theme.cardBgColor};\r\n    color: ${(props) => props.theme.textColor};\r\n    border-radius: 15px;\r\n    margin-bottom: 10px;\r\n    a {\r\n        display: flex;\r\n        align-items: center;\r\n        padding: 20px;\r\n        transition: color 0.2s ease-in;\r\n    }\r\n    &:hover {\r\n        a {\r\n            color: ${(props) => props.theme.accentColor};\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 48px;\r\n    color:${props => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n    text-align: center;\r\n    display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n    width:35px;\r\n    height:35px;\r\n    margin-right: 10px;\r\n`;\r\n\r\ninterface ICoin {\r\n    id: string,\r\n    name: string,\r\n    symbol: string,\r\n    rank: number,\r\n    is_new: boolean,\r\n    is_active: boolean,\r\n    type: string,\r\n}\r\n\r\ninterface ICoinsProps {\r\n    toggleDark: () => void;\r\n  }\r\n\r\nfunction Coins({toggleDark} : ICoinsProps){\r\n    const {isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins)\r\n    return <Container>\r\n        <Helmet>\r\n            <title>코인</title>\r\n        </Helmet>\r\n        <Header>\r\n            <Title>코인</Title>\r\n            <button onClick={toggleDark}>Toggle Dark Mode</button>\r\n        </Header>\r\n        {isLoading ? (<Loader>Loading...</Loader>) : (\r\n            <CoinsList>\r\n                {data?.slice(0,100).map(coin => (\r\n                    <Coin key={coin.id}>\r\n                        <Link to={{\r\n                            pathname:`/react-masterclass/${coin.id}`,\r\n                            state: { name: coin.name},\r\n                        }}>\r\n                            <Img src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}/>\r\n                            {coin.name} &rarr;\r\n                        </Link>\r\n                    </Coin>\r\n                ))}\r\n            </CoinsList>\r\n        )}\r\n    </Container>\r\n}\r\n\r\nexport default Coins;","import {BrowserRouter, Switch, Route} from \"react-router-dom\"\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\ninterface IRouterProps {\r\n    toggleDark: () => void;\r\n    isDark:boolean;\r\n}\r\n\r\nfunction Router({toggleDark, isDark}: IRouterProps){\r\n    return <BrowserRouter>\r\n        <Switch>\r\n            <Route path={'/react-masterclass/:coinId'}>\r\n                <Coin isDark={isDark}/>\r\n            </Route>\r\n            <Route path={'/react-masterclass/'}>\r\n                <Coins toggleDark={toggleDark}/>\r\n            </Route>        \r\n        </Switch>\r\n    </BrowserRouter>\r\n}\r\nexport default Router;","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const darkTheme:DefaultTheme = {\r\n    bgColor:\"#2f3640\",\r\n    textColor:\"black\",\r\n    accentColor:\"#4cd137\",\r\n    cardBgColor: \"transparent\",\r\n}\r\n\r\nexport const lightTheme:DefaultTheme = {\r\n    bgColor:\"whitesmoke\",\r\n    textColor:\"black\",\r\n    accentColor:\"#4cd137\",\r\n    cardBgColor: \"white\",\r\n}","import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${props => props.theme.bgColor};\n  color:${props => props.theme.textColor};\n\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`\n\nfunction App() {\n  const [isDack, setInDark] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const toggleDark = () => setInDark((current) => !current)\n  return (\n    <>\n      <ThemeProvider theme={isDack ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router isDark={isDack} toggleDark={toggleDark}/>\n        <ReactQueryDevtools initialIsOpen={true}/>\n      </ThemeProvider>{\" \"}\n    </>\n    );\n}\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App/>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}